{"version":3,"file":"main.min.js","mappings":";;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA,eAAe;AACf;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;UChKD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNwB","sources":["webpack://isabeltheme/./js/gutenberg.js","webpack://isabeltheme/./js/main.js","webpack://isabeltheme/webpack/bootstrap","webpack://isabeltheme/webpack/runtime/compat get default export","webpack://isabeltheme/webpack/runtime/define property getters","webpack://isabeltheme/webpack/runtime/hasOwnProperty shorthand","webpack://isabeltheme/webpack/runtime/make namespace object","webpack://isabeltheme/./js/app.js"],"sourcesContent":["","class Header {\n  constructor() {\n    this.header = document.querySelectorAll(\"header\");\n    this.hheader = document.querySelectorAll(\"header\")[0].offsetHeight;\n    this.mobileMenu = document.querySelector(\".menu-desktop\");\n    this.mobileButton = document.querySelector(\".menu-button-wrapper\");\n    this.mobileButtonLines = this.mobileButton.querySelectorAll(\"span\");\n    this.mobileMenuli = document.querySelectorAll(\".menu-item\");\n    this.init();\n  }\n\n  init() {\n    window.addEventListener(\"scroll\", () => this.headerOnScroll());\n    this.mobileButton.onclick = this.toggleMobileMenu;\n    this.setupMobileMenuLinks();\n    this.formSubmission();\n  }\n\n  headerOnScroll() {\n    if (this.header.length > 0) {\n      if (window.scrollY > 1) {\n        this.header[0].classList.add(\"changebg\");\n      } else {\n        this.header[0].classList.remove(\"changebg\");\n      }\n    }\n  }\n\n  toggleMobileMenu = () => {\n    this.mobileMenu.classList.toggle(\"open\");\n    this.header[0].classList.toggle(\"changebg\");\n    this.mobileButtonLines.forEach((span) => {\n      span.classList.toggle(\"change\");\n    });\n  };\n\n  setupMobileMenuLinks() {\n    if (this.mobileMenuli) {\n      this.mobileMenuli.forEach((li) => {\n        li.addEventListener(\"click\", () => {\n          this.toggleMobileMenu();\n        });\n      });\n    }\n  }\n\n  formSubmission() {\n    const form = document.getElementById(\"my-form\");\n    if (form) {\n      async function handleSubmit(event) {\n        event.preventDefault();\n        var status = document.getElementById(\"my-form-status\");\n        var data = new FormData(event.target);\n        fetch(event.target.action, {\n          method: form.method,\n          body: data,\n          headers: {\n            Accept: \"application/json\",\n          },\n        })\n          .then((response) => {\n            if (response.ok) {\n              status.innerHTML = \"Thanks for your submission!\";\n              form.reset();\n            } else {\n              response.json().then((data) => {\n                if (Object.hasOwn(data, \"errors\")) {\n                  status.innerHTML = data[\"errors\"]\n                    .map((error) => error[\"message\"])\n                    .join(\", \");\n                } else {\n                  status.innerHTML =\n                    \"Oops! There was a problem submitting your form\";\n                }\n              });\n            }\n          })\n          .catch((error) => {\n            status.innerHTML = \"Oops! There was a problem submitting your form\";\n          });\n      }\n      form.addEventListener(\"submit\", handleSubmit);\n    }\n  }\n}\n\nclass ScrollManager {\n  constructor() {\n    this.headerHeight = document.querySelector(\"header\").offsetHeight;\n\n    document.querySelectorAll('a[href^=\"#\"]').forEach((anchor) => {\n      anchor.addEventListener(\"click\", this.scrollToTarget.bind(this));\n    });\n  }\n\n  scrollToTarget(event) {\n    event.preventDefault();\n\n    const targetId = event.currentTarget.getAttribute(\"href\").substring(1);\n    const targetElement = document.getElementById(targetId);\n\n    if (targetElement) {\n      const offset = targetElement.offsetTop - this.headerHeight;\n      window.scrollTo({\n        top: offset,\n        behavior: \"smooth\",\n      });\n    }\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const scrollManager = new ScrollManager();\n});\n\nclass Svgswitcher {\n  constructor() {\n    this.imgToSvg = document.querySelectorAll(\".svg\");\n    this.btnBlueImages = document.querySelectorAll(\".btn-blue .menu-image\");\n    this.init();\n  }\n\n  init() {\n    this.addSvgClass(this.btnBlueImages);\n    this.replaceImagesWithSvg(this.imgToSvg);\n    this.replaceImagesWithSvg(this.btnBlueImages);\n  }\n\n  addSvgClass(elements) {\n    elements.forEach((el) => {\n      el.classList.add(\"svg\");\n    });\n  }\n\n  replaceImagesWithSvg(elements) {\n    elements.forEach((el) => {\n      const imgURL = el.src;\n\n      if (imgURL) {\n        fetch(imgURL)\n          .then((data) => data.text())\n          .then((response) => {\n            const parser = new DOMParser();\n            const xmlDoc = parser.parseFromString(response, \"text/html\");\n            let svg = xmlDoc.querySelector(\"svg\");\n            svg.removeAttribute(\"xmlns:a\");\n            el.parentNode.replaceChild(svg, el);\n          })\n          .catch((error) => {\n            console.error(\"Error fetching SVG:\", error);\n          });\n      }\n    });\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const switcher = new Svgswitcher();\n  const header = new Header();\n  const scrollManager = new ScrollManager(header);\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"./gutenberg.js\";\nimport \"./main.js\";"],"names":[],"sourceRoot":""}